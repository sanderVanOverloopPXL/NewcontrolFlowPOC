var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.465,1,0.863]],["body/components/AppComponent.html",[0,0.36,1,0.789,2,0.883,3,0.516,4,0.391,5,0.707,6,0.707,7,0.707,8,0.391,9,0.391,10,0.707,11,1.157,12,1.539,13,1.157,14,0.883,15,1.157,16,0.883,17,0.883,18,0.883,19,0.883,20,0.297,21,0.509,22,1.539,23,1.157,24,1.157,25,1.793,26,1.209,27,1.37,28,1.678,29,1.678,30,1.209,31,1.891,32,1.209,33,1.37,34,1.678,35,1.678,36,1.209,37,3.091,38,0.707,39,2.8,40,0.11,41,2.107,42,0.707,43,0.707,44,0.883,45,2.046,46,0.707,47,1.584,48,2.107,49,1.033,50,1.584,51,1.678,52,0.707,53,0.883,54,0.707,55,0.707,56,0.707,57,0.707,58,0.707,59,0.883,60,0.707,61,2.258,62,1.974,63,1.037,64,1.37,65,0.707,66,0.883,67,0.707,68,1.215,69,0.707,70,1.271,71,1.37,72,0.707,73,1.157,74,0.391,75,0.516,76,0.391,77,0.391,78,0.223,79,0.883,80,0.516,81,0.516,82,0.516,83,0.516,84,0.516,85,0.516,86,0.883,87,0.516,88,0.883,89,1.157,90,1.539,91,0.516,92,0.516,93,0.516,94,1.678,95,0.883,96,1.793,97,0.883,98,0.883,99,0.516,100,0.391,101,0.516,102,0.516,103,0.516,104,0.883,105,1.37,106,0.669,107,1.209,108,1.209,109,1.209,110,1.209,111,1.209,112,1.209,113,1.209,114,1.209,115,2.963,116,2.296,117,2.296,118,1.209,119,0.707,120,1.209,121,1.209,122,1.209,123,1.209,124,1.209,125,1.875,126,1.678,127,1.209,128,1.209,129,1.875,130,1.209,131,1.209,132,1.209,133,1.209,134,0.707,135,1.209,136,1.209,137,1.209,138,0.707,139,1.209,140,1.209,141,0.707,142,1.875,143,0.707,144,0.707,145,0.707,146,0.516,147,0.707,148,0.033,149,0.033]],["title/interfaces/Todo.html",[68,0.863,78,0.646]],["body/interfaces/Todo.html",[0,0.5,1,0.629,3,1.092,4,0.827,8,0.827,9,0.827,11,1.092,12,1.092,13,1.092,14,1.092,15,1.608,16,1.092,17,1.092,18,1.092,19,1.092,20,0.629,21,0.926,22,1.092,23,1.092,24,1.092,25,1.092,27,1.092,28,1.092,29,1.092,31,1.092,33,1.092,34,1.092,35,1.092,40,0.11,44,1.092,45,2.348,49,1.099,51,2.428,53,1.092,59,1.092,61,2.491,62,1.608,66,1.909,68,1.293,70,1.218,71,1.092,73,1.909,74,0.827,75,1.092,76,0.827,77,0.827,78,0.471,79,2.245,80,1.909,81,1.092,82,1.092,83,1.092,84,1.092,85,1.092,86,1.608,87,1.092,88,1.608,89,1.909,90,1.092,91,1.092,92,1.092,93,1.092,94,1.608,95,1.608,96,2.428,97,1.608,98,1.608,99,1.092,100,0.827,101,1.092,102,1.092,103,1.092,104,1.608,105,2.106,148,0.059,149,0.059,150,1.494]],["title/coverage.html",[151,2.009]],["body/coverage.html",[0,0.614,1,1.139,8,1.497,9,1.817,40,0.102,49,1.139,68,1.139,78,0.853,106,1.497,126,2.583,148,0.089,149,0.089,151,1.977,152,2.705,153,2.705,154,2.705,155,2.705,156,2.705,157,1.977,158,2.705,159,1.977,160,2.705,161,2.705,162,2.705]],["title/dependencies.html",[163,1.268,164,1.792]],["body/dependencies.html",[40,0.108,74,1.449,76,1.449,77,1.449,148,0.087,149,0.087,164,1.913,165,2.618,166,3.847,167,2.618,168,3.218,169,2.351,170,2.618,171,2.618,172,2.618,173,2.618,174,2.618,175,2.618,176,2.618]],["title/index.html",[20,0.731,177,1.736,178,1.736]],["body/index.html",[0,0.652,2,1.293,4,0.979,40,0.067,63,1.375,70,0.979,106,0.979,146,1.293,148,0.067,149,0.067,169,1.293,179,1.769,180,2.872,181,1.769,182,2.485,183,3.115,184,3.281,185,1.293,186,1.769,187,2.485,188,2.872,189,1.769,190,1.769,191,3.281,192,3.403,193,3.403,194,1.769,195,2.485,196,1.769,197,1.769,198,1.769,199,2.485,200,1.769,201,1.769,202,1.769,203,1.769,204,1.769,205,2.485,206,2.485,207,1.769,208,1.769,209,1.769,210,2.872,211,1.769,212,1.769,213,1.769,214,1.769,215,1.769,216,1.769,217,1.769,218,2.872,219,1.769,220,1.769,221,1.769,222,1.769,223,1.769,224,1.769,225,1.769,226,1.769,227,1.769,228,1.769,229,2.485,230,2.872,231,1.769,232,1.769,233,1.769,234,1.769,235,1.769,236,1.769,237,2.872,238,1.769,239,3.403,240,1.769,241,2.485,242,1.769,243,1.769,244,1.769,245,1.769,246,1.769,247,1.769,248,1.769,249,1.769,250,1.769,251,1.769,252,1.769,253,1.769,254,1.769,255,1.769,256,1.769,257,0.979,258,1.769,259,1.769]],["title/modules.html",[260,2.009]],["body/modules.html",[40,0.096,148,0.096,149,0.096,260,2.257]],["title/overview.html",[257,1.521]],["body/overview.html",[0,0.686,40,0.095,78,0.952,100,1.94,148,0.095,149,0.095,257,1.673]],["title/properties.html",[21,1.032,163,1.268]],["body/properties.html",[21,1.279,40,0.1,148,0.095,149,0.095,185,2.22,261,3.039]],["title/miscellaneous/variables.html",[262,1.268,263,1.792]],["body/miscellaneous/variables.html",[20,1.172,40,0.105,49,1.172,63,1.541,64,2.035,148,0.09,149,0.09,157,2.035,159,2.441,262,2.035,263,2.035,264,2.785,265,2.785,266,2.785,267,2.785,268,2.785,269,2.785,270,2.785]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":261,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["0/1",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":155,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":156,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"overview.html":{}}}],["10",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["19.2.0",{"_index":166,"title":{},"body":{"dependencies.html":{}}}],["19.2.8",{"_index":186,"title":{},"body":{"index.html":{}}}],["1].text",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["2.3.0",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["7.8.0",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["actual_component",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["added",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["additional",{"_index":249,"title":{},"body":{"index.html":{}}}],["addtodo",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["angular",{"_index":183,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":165,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":167,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":168,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"dependencies.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["app.component.css",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["app.component.html",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["appconfig",{"_index":159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":199,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifacts",{"_index":222,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":200,"title":{},"body":{"index.html":{}}}],["available",{"_index":213,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["browser",{"_index":169,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":218,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":219,"title":{},"body":{"index.html":{}}}],["case('list",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["case('stats",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["case(\\'list",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["case(\\'stats",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["caught",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["choose",{"_index":245,"title":{},"body":{"index.html":{}}}],["class",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["cli",{"_index":184,"title":{},"body":{"index.html":{}}}],["code",{"_index":205,"title":{},"body":{"index.html":{}}}],["come",{"_index":243,"title":{},"body":{"index.html":{}}}],["command",{"_index":237,"title":{},"body":{"index.html":{}}}],["compile",{"_index":220,"title":{},"body":{"index.html":{}}}],["complete",{"_index":212,"title":{},"body":{"index.html":{}}}],["completed",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["completedcount",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["completedfilteredcount",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["completing",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["consider",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["control",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["count",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":151,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["date.now",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["default",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["deletetodo",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["deletetodo(id",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["dependencies",{"_index":164,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["detailed",{"_index":254,"title":{},"body":{"index.html":{}}}],["development",{"_index":187,"title":{},"body":{"index.html":{}}}],["directive",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["directory",{"_index":224,"title":{},"body":{"index.html":{}}}],["dist",{"_index":223,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":152,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":240,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":242,"title":{},"body":{"index.html":{}}}],["element",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":239,"title":{},"body":{"index.html":{}}}],["eventcoalescing",{"_index":268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":192,"title":{},"body":{"index.html":{}}}],["execute",{"_index":231,"title":{},"body":{"index.html":{}}}],["export",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["false",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["files",{"_index":204,"title":{},"body":{"index.html":{}}}],["filter",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["filteredtodos",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["filteredtodos().length",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["flow",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["following",{"_index":236,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["framework",{"_index":244,"title":{},"body":{"index.html":{}}}],["generate",{"_index":210,"title":{},"body":{"index.html":{}}}],["generated",{"_index":181,"title":{},"body":{"index.html":{}}}],["generatesampletodos",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["generatesampletodos(count",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["getting",{"_index":177,"title":{"index.html":{}},"body":{}}],["helpbuilding",{"_index":217,"title":{},"body":{"index.html":{}}}],["html",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["http://localhost:4200",{"_index":198,"title":{},"body":{"index.html":{}}}],["id",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["identifier",{"_index":153,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["imports",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["includes",{"_index":207,"title":{},"body":{"index.html":{}}}],["including",{"_index":253,"title":{},"body":{"index.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["information",{"_index":252,"title":{},"body":{"index.html":{}}}],["interface",{"_index":78,"title":{"interfaces/Todo.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":150,"title":{},"body":{"interfaces/Todo.html":{}}}],["karma",{"_index":232,"title":{},"body":{"index.html":{}}}],["legend",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"index.html":{}}}],["local",{"_index":190,"title":{},"body":{"index.html":{}}}],["long",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["many",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["mark",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["matching",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":262,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":203,"title":{},"body":{"index.html":{}}}],["modules",{"_index":260,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":251,"title":{},"body":{"index.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["namefor",{"_index":211,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":197,"title":{},"body":{"index.html":{}}}],["needs",{"_index":248,"title":{},"body":{"index.html":{}}}],["new",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{}}}],["newcontrolflow",{"_index":179,"title":{},"body":{"index.html":{}}}],["newtodo",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["newtodo.length",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["ng",{"_index":193,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["number",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["one",{"_index":246,"title":{},"body":{"index.html":{}}}],["open",{"_index":196,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":226,"title":{},"body":{"index.html":{}}}],["option",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":257,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":163,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":259,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["pending",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["pendingcount",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["pendingfilteredcount",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["performance",{"_index":227,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":216,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":208,"title":{},"body":{"index.html":{}}}],["production",{"_index":225,"title":{},"body":{"index.html":{}}}],["project",{"_index":180,"title":{},"body":{"index.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"properties.html":{}}}],["providerouter(routes",{"_index":270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quite",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["randomly",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["recently",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["reference",{"_index":258,"title":{},"body":{"index.html":{}}}],["references",{"_index":255,"title":{},"body":{"index.html":{}}}],["reload",{"_index":201,"title":{},"body":{"index.html":{}}}],["resources",{"_index":250,"title":{},"body":{"index.html":{}}}],["results",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["routeroutlet",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["run",{"_index":191,"title":{},"body":{"index.html":{}}}],["runner",{"_index":234,"title":{},"body":{"index.html":{}}}],["running",{"_index":195,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":206,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":214,"title":{},"body":{"index.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["serveonce",{"_index":194,"title":{},"body":{"index.html":{}}}],["server",{"_index":188,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"index.html":{}}}],["speed",{"_index":228,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:64",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:72",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:76",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":189,"title":{},"body":{"index.html":{}}}],["started",{"_index":178,"title":{"index.html":{}},"body":{}}],["statements",{"_index":154,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["store",{"_index":221,"title":{},"body":{"index.html":{}}}],["string",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["such",{"_index":215,"title":{},"body":{"index.html":{}}}],["suits",{"_index":247,"title":{},"body":{"index.html":{}}}],["summary",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["switch(view",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["t.completed",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["t.id",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["table",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["tasks",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["test",{"_index":233,"title":{},"body":{"index.html":{}}}],["testing",{"_index":241,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":238,"title":{},"body":{"index.html":{}}}],["tests",{"_index":230,"title":{},"body":{"index.html":{}}}],["text",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["this.filter",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["this.filteredtodos().filter(todo",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["this.generatesampletodos(500",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["this.newtodo",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["this.newtodo.trim",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["this.todos",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["this.todos.filter(t",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["this.todos.filter(todo",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["this.todos.find(t",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["this.todos.push",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["todo",{"_index":68,"title":{"interfaces/Todo.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["todo.completed",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["todo.completed).length",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["todo.id",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["todo.text",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["todos",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["todos.length",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["todos[todos.length",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["togglecomplete",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["togglecomplete(id",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["tools",{"_index":209,"title":{},"body":{"index.html":{}}}],["total",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["track",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":229,"title":{},"body":{"index.html":{}}}],["up",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["use",{"_index":235,"title":{},"body":{"index.html":{}}}],["using",{"_index":182,"title":{},"body":{"index.html":{}}}],["value",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["variable",{"_index":158,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":263,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":185,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Todo.html":{}}}],["visit",{"_index":256,"title":{},"body":{"index.html":{}}}],["void",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["whenever",{"_index":202,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":175,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                newTodo\n                            \n                            \n                                todos\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTodo\n                            \n                            \n                                completedCount\n                            \n                            \n                                completedFilteredCount\n                            \n                            \n                                deleteTodo\n                            \n                            \n                                filteredTodos\n                            \n                            \n                                generateSampleTodos\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                pendingCount\n                            \n                            \n                                pendingFilteredCount\n                            \n                            \n                                toggleComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTodo\n                        \n                    \n                \n            \n            \n                \naddTodo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completedCount\n                        \n                    \n                \n            \n            \n                \ncompletedCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completedFilteredCount\n                        \n                    \n                \n            \n            \n                \ncompletedFilteredCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTodo\n                        \n                    \n                \n            \n            \n                \ndeleteTodo(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredTodos\n                        \n                    \n                \n            \n            \n                \nfilteredTodos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateSampleTodos\n                        \n                    \n                \n            \n            \n                \ngenerateSampleTodos(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingCount\n                        \n                    \n                \n            \n            \n                \npendingCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingFilteredCount\n                        \n                    \n                \n            \n            \n                \npendingFilteredCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleComplete\n                        \n                    \n                \n            \n            \n                \ntoggleComplete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"all\" | \"completed\" | \"pending\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newTodo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"list\" | \"stats\"\n\n                    \n                \n                \n                    \n                        Default value : 'list'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport {FormsModule} from '@angular/forms';\n\ninterface Todo {\n  id: number;\n  text: string;\n  completed: boolean;\n}\n\n\n@Component({\n  selector: 'app-root',\n  imports: [ FormsModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  todos: Todo[] = [];\n  newTodo = '';\n  filter: 'all' | 'completed' | 'pending' = 'all';\n  view: 'list' | 'stats' = 'list';\n\n  addTodo() {\n    if (this.newTodo.trim()) {\n      this.todos.push({\n        id: Date.now(),\n        text: this.newTodo,\n        completed: false,\n      });\n      this.newTodo = '';\n    }\n  }\n\n  deleteTodo(id: number) {\n    this.todos = this.todos.filter(todo => todo.id !== id);\n  }\n\n  toggleComplete(id: number) {\n    const todo = this.todos.find(t => t.id === id);\n    if (todo) todo.completed = !todo.completed;\n  }\n\n  filteredTodos() {\n    if (this.filter === 'completed') return this.todos.filter(t => t.completed);\n    if (this.filter === 'pending') return this.todos.filter(t => !t.completed);\n    return this.todos;\n  }\n\n  ngOnInit() {\n    this.generateSampleTodos(500);\n  }\n\n  generateSampleTodos(count: number) {\n    for (let i = 1; i  0.5, // Randomly mark some as completed\n      });\n    }\n  }\n\n  pendingFilteredCount() {\n    return this.filteredTodos().filter(todo => !todo.completed).length;\n  }\n\n  completedFilteredCount() {\n    return this.filteredTodos().filter(todo => todo.completed).length;\n  }\n\n  pendingCount() {\n    return this.todos.filter(todo => !todo.completed).length;\n  }\n\n  completedCount() {\n    return this.todos.filter(todo => todo.completed).length;\n  }\n}\n\n    \n\n    \n        \n  Todo App - New Control Flow\n\n  \n    \n    Add\n    @if (newTodo.length > 20) {\n      Description is quite long\n    }\n  \n\n  \n    Filter Tasks:\n    @for (option of ['all', 'completed', 'pending']; track option) {\n      \n         {{ option }}\n      \n    }\n  \n\n  \n    📝 List View\n    📊 Stats View\n  \n\n  @switch(view) {\n    @case('list') {\n      \n        @if (filteredTodos().length > 10) {\n          ⚠ Too many tasks, consider completing some!\n        }\n\n        \n          Pending Tasks\n          \n            @for (todo of filteredTodos(); track todo.id) {\n              @if (!todo.completed) {\n                \n                  {{ todo.text }}\n                  ✔\n                  ✖\n                \n              }\n            }\n          \n          @if (pendingFilteredCount() === 0) {\n            🎉 All caught up!\n          }\n        \n\n        \n          Completed Tasks\n          \n            @for ( todo of filteredTodos(); track todo.id) {\n              @if (todo.completed) {\n                \n                  {{ todo.text }}\n                  ⏪\n                  🗑\n                \n              }\n            }\n          \n          @if (completedFilteredCount() === 0) {\n            No completed tasks yet.\n          }\n        \n\n        @if (todos.length > 0) {\n          \n            🆕 Recently Added:\n            {{ todos[todos.length - 1].text }}\n          \n        }\n      \n    }\n\n    @case('stats') {\n      \n        📈 Task Summary\n        Total Tasks: {{ todos.length }}\n        Completed: {{ completedCount() }}\n        Pending: {{ pendingCount() }}\n      \n    }\n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Todo App - New Control Flow          Add    @if (newTodo.length > 20) {      Description is quite long    }        Filter Tasks:    @for (option of [\\'all\\', \\'completed\\', \\'pending\\']; track option) {               {{ option }}          }        📝 List View    📊 Stats View    @switch(view) {    @case(\\'list\\') {              @if (filteredTodos().length > 10) {          ⚠ Too many tasks, consider completing some!        }                  Pending Tasks                      @for (todo of filteredTodos(); track todo.id) {              @if (!todo.completed) {                                  {{ todo.text }}                  ✔                  ✖                              }            }                    @if (pendingFilteredCount() === 0) {            🎉 All caught up!          }                          Completed Tasks                      @for ( todo of filteredTodos(); track todo.id) {              @if (todo.completed) {                                  {{ todo.text }}                  ⏪                  🗑                              }            }                    @if (completedFilteredCount() === 0) {            No completed tasks yet.          }                @if (todos.length > 0) {                      🆕 Recently Added:            {{ todos[todos.length - 1].text }}                  }          }    @case(\\'stats\\') {              📈 Task Summary        Total Tasks: {{ todos.length }}        Completed: {{ completedCount() }}        Pending: {{ pendingCount() }}          }  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport {FormsModule} from '@angular/forms';\n\ninterface Todo {\n  id: number;\n  text: string;\n  completed: boolean;\n}\n\n\n@Component({\n  selector: 'app-root',\n  imports: [ FormsModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  todos: Todo[] = [];\n  newTodo = '';\n  filter: 'all' | 'completed' | 'pending' = 'all';\n  view: 'list' | 'stats' = 'list';\n\n  addTodo() {\n    if (this.newTodo.trim()) {\n      this.todos.push({\n        id: Date.now(),\n        text: this.newTodo,\n        completed: false,\n      });\n      this.newTodo = '';\n    }\n  }\n\n  deleteTodo(id: number) {\n    this.todos = this.todos.filter(todo => todo.id !== id);\n  }\n\n  toggleComplete(id: number) {\n    const todo = this.todos.find(t => t.id === id);\n    if (todo) todo.completed = !todo.completed;\n  }\n\n  filteredTodos() {\n    if (this.filter === 'completed') return this.todos.filter(t => t.completed);\n    if (this.filter === 'pending') return this.todos.filter(t => !t.completed);\n    return this.todos;\n  }\n\n  ngOnInit() {\n    this.generateSampleTodos(500);\n  }\n\n  generateSampleTodos(count: number) {\n    for (let i = 1; i  0.5, // Randomly mark some as completed\n      });\n    }\n  }\n\n  pendingFilteredCount() {\n    return this.filteredTodos().filter(todo => !todo.completed).length;\n  }\n\n  completedFilteredCount() {\n    return this.filteredTodos().filter(todo => todo.completed).length;\n  }\n\n  pendingCount() {\n    return this.todos.filter(todo => !todo.completed).length;\n  }\n\n  completedCount() {\n    return this.todos.filter(todo => todo.completed).length;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNewcontrolFlow\nThis project was generated using Angular CLI version 19.2.8.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
